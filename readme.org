
* chart-svg-compound

Deprecated: integrated into chart-svg v0.6

[[https://hackage.haskell.org/package/chart-svg-compound][https://img.shields.io/hackage/v/chart-svg-compound.svg]]
[[https://github.com/tonyday567/chart-svg-compound/actions?query=workflow%3Ahaskell-ci][https://github.com/tonyday567/chart-svg-compound/workflows/haskell-ci/badge.svg]]

~chart-svg-compound~ is an experimental addon to chart-svg that attempts to render multiple charts that share a common canvas space.

#+begin_src haskell :results output
:r
:set prompt "> "
:set -Wno-type-defaults
:set -Wno-name-shadowing
:set -XOverloadedStrings
:set -XOverloadedLabels
:set -Wno-incomplete-uni-patterns
import Chart.Compound
import Chart
import Chart.Examples
import Prettychart
import Data.Bifunctor
putStrLn "ok"
(display, quit) <- startChartServer Nothing
disp x = display $ x & set (#markupOptions % #markupHeight) 250 & set (#hudOptions % #frames % ix 1 % _2 % #buffer) 0.1
#+end_src

#+RESULTS:
: [1 of 1] Compiling Chart.Compound   ( src/Chart/Compound.hs, interpreted )
: Ok, one module loaded.
: ghci> Ok, one module loaded.
: ok
: Setting phasers to stun... (port 9160) (ctrl-c to quit)


#+begin_src haskell :results output
unit2 = unitExample & set (#hudOptions % #axes) [(4,defaultAxisOptions & set #place PlaceRight),(4,defaultAxisOptions & set #place PlaceTop)]
#+end_src

#+RESULTS:

#+begin_src haskell :results output
disp $ compoundMerge [unit2, lineExample]
#+end_src

#+RESULTS:
: True
